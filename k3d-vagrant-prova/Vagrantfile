Vagrant.configure("2") do |config|
  config.vm.box = "ubuntu/bionic64"
  config.vm.hostname = "k3d-vm"

  config.vm.provider "virtualbox" do |vb|
    vb.memory = 4096
    vb.cpus = 2
  end
  
  config.vm.network "private_network", ip: "192.168.56.101"

  config.vm.network "forwarded_port", guest: 6443, host: 6443 # API server
  config.vm.network "forwarded_port", guest: 8080, host: 8080 # HTTP ingress
  config.vm.network "forwarded_port", guest: 8443, host: 8443 # HTTPS ingress

  config.vm.provision "shell", inline: <<-SHELL
    set -e

    # Update e installa dipendenze
    apt-get update
    apt-get install -y curl apt-transport-https ca-certificates gnupg software-properties-common

    # Docker
    curl -fsSL https://get.docker.com -o get-docker.sh
    sh get-docker.sh
    usermod -aG docker vagrant

    # kubectl
    curl -LO "https://dl.k8s.io/release/v1.29.2/bin/linux/amd64/kubectl"
    install -o root -g root -m 0755 kubectl /usr/local/bin/kubectl

    # k3d
    curl -s https://raw.githubusercontent.com/k3d-io/k3d/main/install.sh | bash

    # Crea il cluster (1 server, 1 agent, ingress su 8080 e 8443)
    k3d cluster create mio-cluster \
      --agents 1 \
      -p "8080:80@loadbalancer" \
      -p "8443:443@loadbalancer" \
      -p "6443:6443@server:0"

    # Configura KUBECONFIG per l'utente vagrant
    mkdir -p /home/vagrant/.kube
    k3d kubeconfig write mio-cluster > /home/vagrant/.kube/config
    chown -R vagrant:vagrant /home/vagrant/.kube
	
    k3d kubeconfig get mio-cluster > /home/vagrant/.kube/config
    echo "Cluster K3d installato e pronto!"
  SHELL
end

